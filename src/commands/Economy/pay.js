
const { SlashCommandBuilder,EmbedBuilder } = require("discord.js");
const userModule = require("../../Models/user");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("pay")
    .setDescription("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    .addUserOption(o=> o.setName("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    .setRequired(true)
    .setDescription("–ö–æ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å")
    )
    .addIntegerOption((option) =>
      option.setName("–∫–æ–∏–Ω—ã").setDescription("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞")
      .setRequired(true)
    ),
  async execute(interaction) {
    const { guild, member, channel, options, user, guildId } = interaction;
    const amount = options.getInteger("–∫–æ–∏–Ω—ã");
    const target = options.getUser("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
    let user1 = await userModule.findOne({ uid: member.id , gid: guildId});
    let user2 = await userModule.findOne({ uid: target.id , gid: guildId});
    if(!user2) return interaction.reply({ content: "**üò™ | –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.**"})
    if(!user1) return interaction.reply({ content: "**üò™ | –í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/register.\`**"})
    if (target == user) return interaction.reply("–°–∞–º–æ–º—É —Å–µ–±–µ –Ω–µ–ª—å–∑—è")
    const embed = new EmbedBuilder();
    if (user1.eco.balance < amount) {
      embed
        .setDescription("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏")
        .setColor("Red");
      return interaction.reply({ embeds: [embed] , ephemeral:true});
    }
    try {
    user1.eco.balance -= amount;
    user2.eco.balance += amount;
    embed.setColor('Blurple')
    .setAuthor({name: member.displayName, iconURL: member.displayAvatarURL({dynamic:true})})
    .setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ \`${amount}\`üí∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${target} (\`${target.id}\`).**`)
    .setFooter({text: client.user.username, iconURL: client.user.displayAvatarURL({dynamic:true})})
    await user1.save();
    await user2.save();
    interaction.reply({ embeds: [embed] })
  } catch(e){
    console.log(e);
  }
  }, 
};
