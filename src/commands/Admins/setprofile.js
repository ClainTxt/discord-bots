const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits} = require("discord.js");
const userModule = require("../../Models/user")

module.exports = {
    data: new SlashCommandBuilder()
    .setName("setprofile")
    .setDescription("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
    .addSubcommand(s=>
        s.setName("set-coins")
        .setDescription("–ò–∑–º–µ–Ω–∏—Ç—å —Å—á–µ—Ç –∫–æ–∏–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        .addNumberOption((option) =>
          option
            .setName("–∫–æ–∏–Ω—ã")
            .setDescription("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤.")
            .setRequired(true)
        )
        .addUserOption((option) =>
          option
            .setName("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            .setDescription("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).")
        )
    )
    .addSubcommand(s=>s.setName("reset-time").setDescription("–û–±–Ω—É–ª–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥").addUserOption((option) =>option.setName("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").setDescription("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)."))
    )
    .addSubcommand(s=> s.setName("set-premium").setDescription("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        .addBooleanOption(o=> o.setName("—Å—Ç–∞—Ç—É—Å").setDescription("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å").setRequired(true))
        .addUserOption((option) => option.setName("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").setDescription("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)."))
    ),
    async execute(interaction,client){
        const { options, member, user, guild, guildId} = interaction; 
        const mention = options.getUser("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å") || user;
        const status = options.getBoolean("—Å—Ç–∞—Ç—É—Å")
        const coins = options.getNumber("–∫–æ–∏–Ω—ã")
        const embed = new EmbedBuilder()
        .setTimestamp()
        .setColor("Blurple")
        .setAuthor({name: mention.tag, iconURL: mention.displayAvatarURL({ dynamic: true})})

        .setFooter({text: client.user.username, iconURL: client.user.displayAvatarURL({dynamic:true})})

        
        const moduleUser = await userModule.findOne({ gid: guildId, uid: mention.id || member.id,})
        if(!moduleUser) return interaction.reply("**üò™ | –ö–æ–≥–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/register.\`**")
        const sub = options.getSubcommand(["set-coins","reset-time","set-premium"]);
        switch(sub){
            case "set-coins":
                embed
                .setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–∏–Ω–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.**`)
                .addFields(
                    {name: "–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `${moduleUser.eco.balance} üí∏`, inline: true},
                    {name: "–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `${coins} üí∏`, inline: true},
                )
                moduleUser.eco.balance = parseInt(coins);
                await moduleUser.save();
                return await interaction.reply({embeds:[embed]})
            case "reset-time":
                embed
                .setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª–∏–ª–∏ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.**`)
                moduleUser.eco.timelyTime = 0;
                moduleUser.eco.worktime = 0;
                await moduleUser.save();
                return await interaction.reply({embeds:[embed]})
            case "set-premium":
                if(moduleUser.premium == status) return interaction.reply("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–∞–∫–æ–π —Å—Ç–∞—Ç—É—Å")
                moduleUser.premium = status;
                embed
                .setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.**`)                
                .addFields(
                    {name: "–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `\`–ü—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\``, inline: true},
                    {name: "–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `\`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\``, inline: true},
                )
                if(moduleUser.premium) embed.setFields(
                    {name: "–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `\`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\``, inline: true},
                    {name: "–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value: `\`–ü—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\``, inline: true},
                )
                await moduleUser.save();
                return await interaction.reply({embeds:[embed]})
        }
    }
}