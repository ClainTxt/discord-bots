const {
  SlashCommandBuilder,
  RoleSelectMenuBuilder,
  PermissionFlagsBits,
  EmbedBuilder,
} = require("discord.js");
const Shop = require("../../Models/Shop");
module.exports = {
  data: new SlashCommandBuilder()
    .setName("setshop")
    .setDescription("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
    .addSubcommand(s=>
      s.setName("add")
      .setDescription("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å –≤ –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ –∫–æ–∏–Ω—ã.")
      .addRoleOption(r=>r.setName("—Ä–æ–ª—å").setDescription("–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è").setRequired(true))
      .addNumberOption((option) => option.setName("—Ü–µ–Ω–∞").setDescription("–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ —Ä–æ–ª—å.").setRequired(true))
    )
    .addSubcommand(a=>
      a.setName("dell")
      .setDescription("–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∏–∑ –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ –∫–æ–∏–Ω—ã.")
      .addRoleOption(r=>r.setName("—Ä–æ–ª—å").setDescription("–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.").setRequired(true))
    )
    .addSubcommand(a=>a.setName("edit").setDescription("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ä–æ–ª–∏.")
    .addRoleOption(r=>r.setName("—Ä–æ–ª—å").setDescription("–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É").setRequired(true))
    .addNumberOption(n=>n.setName("—Ü–µ–Ω–∞").setDescription("–£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ - 0).").setRequired(true))
    )
    .addSubcommand(a=>
      a.setName("reset")
      .setDescription("–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ä–æ–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
    )
    ,
  async execute(interaction, client) {
    const { options, guildId, member, guild } = interaction;
    const s = new EmbedBuilder().setColor("Blurple").setAuthor({ name: guild.name}).setTimestamp().setFooter({ text: `Support https://discord.gg/GURtbqsBAW`, iconURL: client.user.displayAvatarURL({dynamic:true})})
    let shop = await Shop.findOne({ GuildID: guildId });
    const role = options.getRole("—Ä–æ–ª—å")
    const price = options.getNumber("—Ü–µ–Ω–∞")
    const sub = options.getSubcommand(["add", "dell", "edit", "reset"])
    let roleData
    let newRole
    try {
      await interaction.deferReply({fetchReply: true})
      switch (sub) {
        case "add": 
        newRole = { roleId: role.id, rolePrice: price };
        if (!role.position >= member.roles.highest.position) return interaction.editReply({content:"–ù–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ",ephemeral:true});
        if (shop) {
          roleData = shop.roles.find((x) => x.roleId === role.id);
          if (roleData) {
            s.setDescription("**üò™ | –≠—Ç–∞ —Ä–æ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ.**")
            return interaction.editReply({embeds:[s]})
          } else {
            shop.roles = [...shop.roles, newRole];
          }
          await shop.save();
        } else {
          await Shop.create({
            GuildID: guildId,
            roles: newRole,
          });
        }       
        s.setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä ${guild.roles.cache.get(role.id)} –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç: \`${price}\` üí∏**`)
        interaction.editReply({embeds: [s]}); 
        break;
        case "edit":
          if(shop) roleData = shop.roles.find((x) => x.roleId === role.id);
          else if(!shop) return interaction.reply({content:"**üò™ | –£–∫–∞–∑–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ! –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ \`/setshop add\`.**",ephemeral:true})
          if(roleData){
            var editedUser = { roleId: role.id, rolePrice: price};
            shop.roles = shop.roles.map(u => u.roleId !== editedUser.roleId ? u : editedUser);
            s.setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–æ–≤–∞—Ä ${guild.roles.cache.get(role.id)}. –¢–µ–ø–µ—Ä—å –µ–≥–æ —Ü–µ–Ω–∞ \`${price}\`üí∏**`)
            interaction.editReply({embeds:[s]})
            shop.save();
          } else return interaction.editReply("**üò™ | –£–∫–∞–∑–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ! –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ \`/setshop add\`.**")
          break;
        case "reset":
            if(shop) {await Shop.findOneAndDelete({ GuildID: guildId })
            s.setDescription("**üöÆ | –í—ã —Å–±—Ä–æ—Å–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π, —Ç–µ–ø–µ—Ä—å –æ–Ω –ø—É—Å—Ç.**")
            interaction.editReply({embeds:[s]})}
            else s.setDescription("**üò™ | –í –º–∞–≥–∞–∑–∏–Ω–µ –∏ —Ç–∞–∫ –Ω–µ—Ç—É —Ä–æ–ª–µ–π, –≤–∞–º –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å.**"); interaction.editReply({embeds:[s]})
        break;
        case "dell":
        if (!shop) {
          return interaction.editReply({ content: "**üò™ | –£–∫–∞–∑–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ! –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ \`/setshop add\`.**"});
        }
        const roles = shop.roles;
        const findRole = roles.find((r) => r.roleId === role.id);
        if (!findRole) { s.setDescription("** üòì | –≠—Ç–æ–π —Ä–æ–ª–∏ –Ω–µ—Ç—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ.**"); return interaction.editReply({ embeds:[s] });}
        const filteredRoles = roles.filter((r) => r.roleId != role.id);
        shop.roles = filteredRoles;
        await shop.save()
        s.setDescription(`**–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä ${guild.roles.cache.get(role.id)}. –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏.**`)
        interaction.editReply({ embeds:[s] });
        break;
      }
    } catch (err) {
      console.log(err);
    }
  },
};
