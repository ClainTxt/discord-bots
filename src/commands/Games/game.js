
const { EmbedBuilder,SlashCommandBuilder, PermissionFlagsBits, ButtonBuilder, ButtonStyle, ActionRowBuilder } = require("discord.js");
const userModel = require("../../Models/user")
const gameModel = require("../../Models/game")
module.exports = {
  data: new SlashCommandBuilder()
    .setName("game")
    .setDescription("–ò–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–∏–Ω–æ–≤.")
    .addSubcommand(s =>
        s.setName("rorg")
        .setDescription("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∫—Ä–∞—Å–Ω–æ–µ –∏–ª–∏ –∑–µ–ª–µ–Ω–æ–µ")
        .addNumberOption(n =>
            n.setName("—Å—Ç–∞–≤–∫–∞")
            .setDescription("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ –∏–≥—Ä—É")
            .setRequired(true)
            .setMinValue(100).setMaxValue(100000000)
            )
        )
    .addSubcommand(s=>
        s.setName("rps")
        .setDescription("–ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞")
        .addNumberOption(o=>
            o.setName("—Å—Ç–∞–≤–∫–∞")
            .setDescription("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å—Ç–∞–≤–∏—Ç–µ –Ω–∞ –∏–≥—Ä—É.")
            .setRequired(true)
            .setMinValue(100).setMaxValue(100000000)
            )
        .addStringOption(o=>
            o.setName("–¥–µ–π—Å—Ç–≤–∏–µ")
            .setDescription("–£–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–∫–∞–∂–µ—Ç–µ")
            .setRequired(true)
            .addChoices(
                { name: "–ö–∞–º–µ–Ω—å", value: "–∫–∞–º–µ–Ω—å"},
                { name: "–ù–æ–∂–Ω–∏—Ü—ã", value: "–Ω–æ–∂–Ω–∏—Ü—ã"},
                { name: "–ë—É–º–∞–≥–∞", value: "–±—É–º–∞–≥–∞"},
            )
            ) 
    )    ,
    async execute(interaction, client){
      const { options , guildId, guild, member, user, channel} = interaction;
      const sub = options.getSubcommand(["rorg","rps"])
      const bet = options.getNumber("—Å—Ç–∞–≤–∫–∞")
      const modelUser = await userModel.findOne({ uid: member.id, gid: guildId})
      const modelGame = await gameModel.findOne({ uid: member.id, gid: guildId})

      let m = await interaction.deferReply({fetchReply: true})
      const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId("game-green").setLabel("–ó–µ–ª–µ–Ω–æ–µ").setStyle(ButtonStyle.Success),
        new ButtonBuilder().setCustomId("game-red").setLabel("–ö—Ä–∞—Å–Ω–æ–µ").setStyle(ButtonStyle.Danger),
      )
        try {
            switch(sub){
                case "rorg":
                if ( !modelUser || !modelGame ) return interaction.editReply("**üò™ | –í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/register.\`**");
                if( modelUser.eco.balance < bet) return interaction.editReply(`**üò™ | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏.**`)
                modelUser.game.bet = bet;
                const embed = new EmbedBuilder().setAuthor({ name: member.displayName, iconURL: member.displayAvatarURL({dynamic:true})})
                .setTimestamp()
                .setDescription(`**\`¬´–ö—Ä–∞—Å–Ω–æ–µ, –ó–µ–ª–µ–Ω–æ–µ¬ª\`, –≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∏–≥—Ä—É —Å –±–æ—Ç–æ–º**`)
                .addFields(
                    {name: `–°—Ç–∞—Ç—É—Å:`, value: `\`–í –æ–∂–∏–¥–∞–Ω–∏–∏ üü°\``,inline:true},
                    {name: `–°—Ç–∞–≤–∫–∞:`, value: `\`${bet}\`üí∏`,inline:true},
                )
                .setFooter({text: `Support: https://discord.gg/GURtbqsBAW`, iconURL: client.user.displayAvatarURL({dynamic:true})})
                modelGame.messageID = m.id;
                await modelUser.save();
                await modelGame.save();
                interaction.editReply({embeds:[embed], components:[buttons]})
                
                break;
                case "rps":
                    if(!modelUser) return interaction.editReply("**üò™ | –í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/register.\`**")
                    const emb = new EmbedBuilder().setTimestamp().setAuthor({ name: member.displayName, iconURL: member.displayAvatarURL({dynamic:true})})
                    .setFooter({text: `Support: https://discord.gg/GURtbqsBAW`, iconURL: client.user.displayAvatarURL({dynamic:true})})
                    const choice = options.getString("–¥–µ–π—Å—Ç–≤–∏–µ")
                    if(modelUser.eco.balance < bet) return interaction.editReply("**üò™ | –£ –≤–∞—Å __–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç__ –∫–æ–∏–Ω–æ–≤ —á—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫—É—é —Å—Ç–∞–≤–∫—É!**")
                    modelUser.game.bet = bet;
                    const rr = Math.floor(Math.random() * 3)
                    let bot_choice = "";
                    if(rr == 0) bot_choice = "–∫–∞–º–µ–Ω—å"
                    if(rr == 1) bot_choice = "–±—É–º–∞–≥–∞"
                    if(rr == 2) bot_choice = "–Ω–æ–∂–Ω–∏—Ü—ã"
                    if(choice == "–∫–∞–º–µ–Ω—å" && bot_choice == "–∫–∞–º–µ–Ω—å") {
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `0 üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞! –ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –∫–æ–∏–Ω–æ–≤!**`)
                    }                    
                    if(choice == "–∫–∞–º–µ–Ω—å" && bot_choice == "–±—É–º–∞–≥–∞") {
                        modelUser.eco.balance -= modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –∏ –≤–∞–º –ø—Ä–∏–π–¥—ë—Ç—Å—è –æ—Ç–¥–∞—Ç—å –∫–æ–∏–Ω—ã –±–æ—Ç—É, —Ç–µ–ø–µ—Ä—å –æ–Ω –∫—É–ø–∏—Ç —Å–µ–±–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç.**`)
                    }
                    if(choice == "–∫–∞–º–µ–Ω—å" && bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") {
                        modelUser.eco.balance += modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –í—ã–∏–≥—Ä–∞–ª–∏ –±–æ—Ç–∞. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –≤ 2 —Ä–∞–∑–∞, –∫–æ–∏–Ω—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.**`)
                    }
                    if(choice == "–Ω–æ–∂–Ω–∏—Ü—ã" && bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") {
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `0 üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞! –ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –∫–æ–∏–Ω–æ–≤!**`)
                    }                    
                    if(choice == "–Ω–æ–∂–Ω–∏—Ü—ã" && bot_choice == "–∫–∞–º–µ–Ω—å") {
                        modelUser.eco.balance -= modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –∏ –≤–∞–º –ø—Ä–∏–π–¥—ë—Ç—Å—è –æ—Ç–¥–∞—Ç—å –∫–æ–∏–Ω—ã –±–æ—Ç—É, —Ç–µ–ø–µ—Ä—å –æ–Ω –∫—É–ø–∏—Ç —Å–µ–±–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç.**`)
                    }
                    if(choice == "–Ω–æ–∂–Ω–∏—Ü—ã" && bot_choice == "–±—É–º–∞–≥–∞") {
                        modelUser.eco.balance += modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –í—ã–∏–≥—Ä–∞–ª–∏ –±–æ—Ç–∞. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –≤ 2 —Ä–∞–∑–∞, –∫–æ–∏–Ω—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.**`)
                    }
                    if(choice == "–±—É–º–∞–≥–∞" && bot_choice == "–±—É–º–∞–≥–∞") {
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `0 üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞! –ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –∫–æ–∏–Ω–æ–≤!**`)
                    }                    
                    if(choice == "–±—É–º–∞–≥–∞" && bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") {
                        modelUser.eco.balance -= modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb.addFields(
                            {name: "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance} üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –∏ –≤–∞–º –ø—Ä–∏–π–¥—ë—Ç—Å—è –æ—Ç–¥–∞—Ç—å –∫–æ–∏–Ω—ã –±–æ—Ç—É, —Ç–µ–ø–µ—Ä—å –æ–Ω –∫—É–ø–∏—Ç —Å–µ–±–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç.**`)
                    }
                    if(choice == "–±—É–º–∞–≥–∞" && bot_choice == "–∫–∞–º–µ–Ω—å") { 
                        modelUser.eco.balance += modelUser.game.bet
                        modelUser.game.bet = 0;
                        emb
                        .addFields(
                            {name: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:", value: `${bet} üí∏`, inline:true},
                            {name:"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:",value: `${modelUser.eco.balance } üí∏`, inline:true}
                        ).setDescription(`**\`¬´–ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞¬ª\`, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —ç—Ç—É –∏–≥—Ä—É —Å –±–æ—Ç–æ–º.**\n\n**„Éª–í—ã –ø–æ–∫–∞–∑–∞–ª–∏: \`${choice}\`\n„Éª${client.user} –ø–æ–∫–∞–∑–∞–ª: \`${bot_choice}\`\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –í—ã–∏–≥—Ä–∞–ª–∏ –±–æ—Ç–∞. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –≤ 2 —Ä–∞–∑–∞, –∫–æ–∏–Ω—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.**`)
                    }                    
                    emb.setColor("Blurple").setTimestamp()  
                    modelUser.eco.rpsTimes += 1;
                    await modelUser.save()
                    interaction.editReply({embeds:[emb]})  
                break;
            }
        } catch(e) {
            console.log(e);
            interaction.editReply({content:"Oshibka, check console",ephemeral:true})
        }
    },
};
