const { EmbedBuilder } = require("@discordjs/builders");
const { SlashCommandBuilder } = require("discord.js");
const userModule = require("../../Models/user");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("try")
    .setDescription("–ò–≥—Ä–∞ 50 –Ω–∞ 50, –ø–æ–≤–µ–∑–µ—Ç –∏–ª–∏ –Ω–µ—Ç.")
    .addIntegerOption((option) =>
      option.setName("bet").setDescription("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞")
      .setRequired(true)
    ),
  async execute(interaction) {
    const { guild, member, channel, options, guildId } = interaction;
    const bet = options.getInteger("bet");
    let user = await userModule.findOne({ uid: member.id, gid: guildId });
    if(!user) return interaction.reply({ content: "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register", ephemeral:true})
    const status = Math.floor(Math.random() * (100 - 1 + 1)) + 1;
    const embed = new EmbedBuilder();
    if (user.eco.balance < bet) {
      embed
        .setDescription("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏")
        .setColor(0xff0000);
      return interaction.reply({ embeds: [embed] , ephemeral:true});
    }
    if (status < 50) {
      user.eco.balance += parseInt(bet);
      embed.setColor(0x00FF00)
      .setDescription(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ \`${bet*2}üí∏\`\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.eco.balance}`).setAuthor({
        name: `${member.user.tag}`,
        iconURL: member.displayAvatarURL({ dynamic: true }),
      });
    } else {
      user.eco.balance -= parseInt(bet);
      embed.setColor(0xff0000)
      .setDescription(`–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ \`${bet}üí∏\`\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.eco.balance}`).setAuthor({
        name: `${member.user.tag}`,
        iconURL: member.displayAvatarURL({ dynamic: true }),
      });
    }
    interaction.reply({ /*content:`test @${user.doc.tag}`,*/ embeds: [embed] })
    await user.save();
  },
};
